// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// This file is part of the Phoenix CTMS project (www.phoenixctms.org),
// distributed under LGPL v2.1. Copyright (C) 2011 - 2017.
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package org.phoenixctms.ctsms.domain;

import java.util.Collection;

import org.hibernate.criterion.Restrictions;
import org.phoenixctms.ctsms.enumeration.JobModule;
import org.phoenixctms.ctsms.query.CriteriaUtil;
import org.phoenixctms.ctsms.util.L10nUtil;
import org.phoenixctms.ctsms.util.L10nUtil.Locales;
import org.phoenixctms.ctsms.vo.JobTypeVO;
import org.phoenixctms.ctsms.vo.TrialOutVO;

/**
 * @see JobType
 */
public class JobTypeDaoImpl
		extends JobTypeDaoBase {

	/**
	 * {@inheritDoc}
	 */
	protected Collection<JobType> handleFindByModuleTrialVisibleId(JobModule module, Long trialId, Boolean visible, Long typeId) {
		org.hibernate.Criteria typeCriteria = this.getSession().createCriteria(JobType.class);
		typeCriteria.setCacheable(true);
		if (module != null) {
			typeCriteria.add(Restrictions.eq("module", module));
		}
		if (trialId != null) {
			typeCriteria.add(Restrictions.eq("trial.id", trialId.longValue()));
		}
		CriteriaUtil.applyVisibleIdCriterion("visible", typeCriteria, visible, typeId);
		return typeCriteria.list();
	}

	/**
	 * {@inheritDoc}
	 */
	public void toJobTypeVO(
			JobType source,
			JobTypeVO target) {
		super.toJobTypeVO(source, target);
		// WARNING! No conversion for target.trial (can't convert source.getTrial():org.phoenixctms.ctsms.domain.Trial to org.phoenixctms.ctsms.vo.TrialOutVO
		Trial trial = source.getTrial();
		if (trial != null) {
			target.setTrial(this.getTrialDao().toTrialOutVO(trial));
		}
		target.setName(L10nUtil.getJobTypeName(Locales.USER, source.getNameL10nKey()));
		target.setDescription(L10nUtil.getJobTypeDescription(Locales.USER, source.getDescriptionL10nKey()));
	}

	/**
	 * {@inheritDoc}
	 */
	public JobTypeVO toJobTypeVO(final JobType entity) {
		// TODO verify behavior of toJobTypeVO
		return super.toJobTypeVO(entity);
	}

	/**
	 * Retrieves the entity object that is associated with the specified value object
	 * from the object store. If no such entity object exists in the object store,
	 * a new, blank entity is created
	 */
	private JobType loadJobTypeFromJobTypeVO(JobTypeVO jobTypeVO) {
		// TODO implement loadJobTypeFromJobTypeVO
		//throw new UnsupportedOperationException("org.phoenixctms.ctsms.domain.loadJobTypeFromJobTypeVO(JobTypeVO) not yet implemented.");
		JobType jobType = null;
		Long id = jobTypeVO.getId();
		if (id != null) {
			jobType = this.get(id);
		}
		if (jobType == null) {
			jobType = JobType.Factory.newInstance();
		}
		return jobType;
	}

	/**
	 * {@inheritDoc}
	 */
	public JobType jobTypeVOToEntity(JobTypeVO jobTypeVO) {
		// TODO verify behavior of jobTypeVOToEntity
		JobType entity = this.loadJobTypeFromJobTypeVO(jobTypeVO);
		this.jobTypeVOToEntity(jobTypeVO, entity, true);
		return entity;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void jobTypeVOToEntity(
			JobTypeVO source,
			JobType target,
			boolean copyIfNull) {
		// TODO verify behavior of jobTypeVOToEntity
		super.jobTypeVOToEntity(source, target, copyIfNull);
		TrialOutVO trialVO = source.getTrial();
		if (trialVO != null) {
			Trial trial = this.getTrialDao().trialOutVOToEntity(trialVO);
			target.setTrial(trial);
			trial.addJobTypes(target);
		} else if (copyIfNull) {
			Trial trial = target.getTrial();
			target.setTrial(null);
			if (trial != null) {
				trial.removeJobTypes(target);
			}
		}
	}
}